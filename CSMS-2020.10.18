#include<stdio.h>

//int main()
//{
//	//&按位于，|按位或，^按位异或
//	//int a = 3;//011
//	//int b = 5;//101
//	//int c = a % b;
//	//int a = 3;//011
//	//int b = 5;//101
//	//int c = a | b;
//	//int a = 3;//011
//	//int b = 5;//101
//	//int c = a ^ b;
//	//printf("%d\n", c);
//	//int a = 20;
//	//a = a + 10;
//	//a += 10;
//	//printf("%d\n", a);
//
//	//int a = 10;
//	//int b = 20;
//	//a + b;双目操作符
//	//0为假，非0为真
//
//	//int a = 10;
//	//printf("%d\n", a);
//	//printf("%d\n", !a);
//
//	//int a = -2;
//	//int b = -a;
//	//int c = +3;
//
//	//int a = 10;
//	//printf("%d\n", sizeof(a));//size of 计算/类型所占的空间，单位是字节
//	//printf("%d\n", sizeof(int));
//	//printf("%d\n", sizeof a);
//
//	int arr[10] = { 0 };//10个整型元素的数组
//	int sz = 0;
//	printf("%d\n", sizeof(arr));
//	//数组总大小除以每个元素的大小
//	sz = sizeof(arr) / sizeof(arr[0]);
//	printf("%d\n", sz);
//
//	return 0;
//}

//int main()
//{
//	//移(2进制)位操作符
//	//《左移操作符
//	int a = 1;
//	//4byte
//	//00000000000000000000000000000001
//	int b = a << 2;
//	printf("%d\n", b);
//	printf("%d\n", a);
//	
//	return 0;
//}

//int main()
//{
//	int a = 5%2;// 取模
//	printf("%d\n", a);
//	return 0;
//}

//int main()
//{
//	//~按（2进制）位取反,1010->0101 
//	int a = 0; //00000000000000000000000000000000
//	int b = ~a;//11111111111111111111111111111111
//	printf("%d\n", b);
//	//原码 -符号位不变，其他位取反》反码 -加一》补码
//	//负数在内存中储蓄的时候，存储的是二进制补码
//	//11111111111111111111111111111111 (补码）
//	//11111111111111111111111111111110（反码）
//	//10000000000000000000000000000001（原码）
//	return 0;
//}

//int main()
//{
//	int a = 10;
//	//int b = a++;//后置++,先使用再++,11 10
//	//int b = ++a;//前置++,先++再使用,11 11
//	//int b = a--;//后置--,先使用再--,9 10
//	int b = --a;//前置++,先++再使用,9 9
//	printf("a=%d b=%d\n", a, b);
//	return 0;
//}

//int main()
//{
//	int a = (int)3.14;
//	printf("%d\n", a);
//	return 0;
//}

//int main()
//{
//	//真-非0；
//	//假-0
//	//&&-逻辑与 有假则假
//	//||-逻辑或 有真则真
//	int a = 1;
//	int b = 5;
//	int c = 0;
//	int d = a && b;
//	int e = a && c;
//	int f = a || b;
//
//	printf("d=%d\n", d);
//	printf("e=%d\n", e);
//	printf("f=%d\n", f);
//	
//	return 0;
//}

//条件操作符
//exp1? exp2:exp3;若1为真，则执行2，否则为3
//int main()
//{
//	int a = 100;
//	int b = 20;
//	int max = 0;
//	max = (a > b ? a : b);
//
//	//if (a > b)
//	//	max = a;
//	//else
//	//	max = b;
//}

//逗号表达式
//exp1,exp2,exp3,....,expN
int Add(int x, int y)
{
	int z = 0;
	z = x + y;
	return z;
}
int main()
{
	int arr[10] = { 0 };
	arr[4];//[]-下标引用操作符
	int a = 10;
	int b = 20;
	int sum = Add(a, b);//()-函数调用操作符
	return 0;
}
